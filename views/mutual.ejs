<!DOCTYPE html>
<html>
	<head>
		<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootswatch/5.0.2/darkly/bootstrap.min.css">
	</head>
	<body>
		<div class="container text-center">
			<h1>Mutual IX</h1>
			<a href="/"><-- Back</a>
			<hr>
			<% if (Object.keys(mutualIX).length > 0) { %>
				<p>Found the following mutual internet exchanges between AS<%= asn1 %> and AS<%= asn2 %></p>

				<ul class="list-group">
					<li class="list-group-item fw-bold">
						<div class="row">
							<div class="col-4">IX Name</div>
							<div class="col-4">AS<%= asn2 %> IPv4</div>
							<div class="col-4">AS<%= asn2 %> IPv6</div>
						</div>
					</li>
					<% for (var ix in mutualIX) { %>
						<li class="list-group-item">
							<div class="row">
								<div class="col-4"><%= mutualIX[ix].name %></div>
								<div class="col-4"><%= mutualIX[ix].ipaddr4 || '-' %></div>
								<div class="col-4"><%= mutualIX[ix].ipaddr6 || '-' %></div>
							</div>
						</li>
					<% } %>
				</ul>
			<% } else { %>
				<p>Found no mutual internet exchanges between AS<%= asn1 %> and AS<%= asn2 %></p>
			<% } %>
		</div>
		<script>
			// https://stackoverflow.com/a/901144
			function getParameterByName(name, url = window.location.href) {
				name = name.replace(/[\[\]]/g, '\\$&');
				var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
					results = regex.exec(url);
				if (!results) return null;
				if (!results[2]) return '';
				return decodeURIComponent(results[2].replace(/\+/g, ' '));
			}

			if (getParameterByName('error') !== null) {
				var errorMsg = '';

				switch (getParameterByName('error')) {
					case 'required':
						errorMsg = 'All fields are required';
						break;
					case 'numeric':
						errorMsg = 'ASNs must be numeric (e.g. 15169) without the "AS" prefix';
						break;
					case 'private':
						errorMsg = 'Private ASNs are not allowed'
						break;
					case 'same':
						errorMsg = 'ASNs cannot be the same';
						break;
					case 'tw-err:pdb-no-asn':
						errorMsg = 'PeeringDB did not return data for one or more ASNs';
						break;
					case 'tw-err:pdb-no-ix':
						errorMsg = 'PeeringDB did not return IX data for one or more ASNs';
						break;
					default:
						errorMsg = 'An error occurred';
				}

				document.getElementById('alert').innerText = errorMsg;
				document.getElementById('alert').classList.remove('d-none');
				
				window.history.replaceState({}, document.title, "/");
			}
		</script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.0.2/js/bootstrap.min.js"></script>
	</body>
</html>